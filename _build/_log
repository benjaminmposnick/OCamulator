### Starting build.
# Target: main.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules main.ml > main.ml.depends # cached
# Target: ast.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o ast.cmo ast.ml # cached
# Target: eval.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:eval.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules eval.ml > eval.ml.depends # cached
# Target: eval.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:eval.cmo, file:eval.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o eval.cmo eval.ml # cached
# Target: lexer.mll, tags: { package(ANSITerminal), package(ounit2), extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet, traverse, use_menhir }
/Users/benposnick/.opam/cs3110-2020fa/bin/ocamllex.opt -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:lexer.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly.depends, tags: { package(ANSITerminal), package(ounit2), extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet, traverse, use_menhir }
menhir --raw-depend --ocamldep 'ocamlfind ocamldep -modules' parser.mly > parser.mly.depends # cached
# Target: parser.mly, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, parser, quiet, traverse, use_menhir }
menhir --ocamlc 'ocamlfind ocamlc -package ounit2 -package ANSITerminal' --infer parser.mly # cached
# Target: parser.mli.depends, tags: { package(ANSITerminal), package(ounit2), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o lexer.cmo lexer.ml # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o main.cmo main.ml # cached
# Target: parser.ml.depends, tags: { package(ANSITerminal), package(ounit2), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse, use_menhir }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, quiet, traverse, use_menhir }
ocamlfind ocamlc -c -package ounit2 -package ANSITerminal -o parser.cmo parser.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(ounit2), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse, use_menhir }
ocamlfind ocamlc -linkpkg -package ounit2 -package ANSITerminal ast.cmo eval.cmo parser.cmo lexer.cmo main.cmo -o main.byte # cached
# Compilation successful.
